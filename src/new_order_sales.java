
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hp
 */
public class new_order_sales extends javax.swing.JFrame {

    /**
     * Creates new form new_order_sales
     */
    int permission_emp, permission_orders;
    set_id ob;
    int row_count = 0;
    String set_product;
    double total_price = 0.0;
    int n = 1;
    String receipt, product, quantity, lens_type, lens_material, frame_length, nose_length, order_date, delivery_date, payment;
    
    public void prod(String s){
        textfield_id.setText(s);
        textfield_quantity.setText("");
        textfield_lens_type.setText("");
        textfield_lens_material.setText("");
        textfield_frame_length.setText("");
        textfield_nose_length.setText("");
    }
    
    public new_order_sales(set_id obj) {
        initComponents();
        
        setting_receipt();
        label_receipt_gen.setText(receipt);
        label_order_date_gen.setText(java.time.LocalDate.now().toString());
        
        table_new_sale.getColumnModel().getColumn(4).setMinWidth(0);
        table_new_sale.getColumnModel().getColumn(4).setMaxWidth(0);
        table_new_sale.getColumnModel().getColumn(5).setMinWidth(0);
        table_new_sale.getColumnModel().getColumn(5).setMaxWidth(0);
        table_new_sale.getColumnModel().getColumn(6).setMinWidth(0);
        table_new_sale.getColumnModel().getColumn(6).setMaxWidth(0);
        table_new_sale.getColumnModel().getColumn(7).setMinWidth(0);
        table_new_sale.getColumnModel().getColumn(7).setMaxWidth(0);
        
        ob = obj;
        permission_emp = ob.employee_perm;
        permission_orders = ob.orders_perm;
        label_emp_gen.setText(ob.current_emp);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        setIconImage(new ImageIcon(".\\icons\\Icon.png").getImage());
    }
    
    void setting_receipt()
    {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
            Statement stm = (Statement) con.createStatement();
            ResultSet rs;
                 
            rs = stm.executeQuery("SELECT MAX(`receipt_no`) FROM `sales_records`");
            rs.next();
            
            String set_id_str;
            set_id_str = rs.getString(1);
            
            String sub_set_id_str = set_id_str.substring(1);                
            int new_id = Integer.parseInt(sub_set_id_str) + 1;
            receipt = "O" + String.valueOf(new_id);
            
        }
        catch(SQLException sqlExp) {
            JOptionPane.showMessageDialog(null,"DATABASE CONNECTION FAILED");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_title = new javax.swing.JLabel();
        button_cancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        label_receipt = new javax.swing.JLabel();
        label_client = new javax.swing.JLabel();
        textfield_client = new javax.swing.JTextField();
        label_receipt_gen = new javax.swing.JLabel();
        label_emp = new javax.swing.JLabel();
        label_emp_gen = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        label_product_id = new javax.swing.JLabel();
        label_quantity = new javax.swing.JLabel();
        label_lens_type = new javax.swing.JLabel();
        label_lens_material = new javax.swing.JLabel();
        label_frame_lenght = new javax.swing.JLabel();
        label_nose_lenght = new javax.swing.JLabel();
        label_order_date = new javax.swing.JLabel();
        label_delivery_date = new javax.swing.JLabel();
        label_payment_made = new javax.swing.JLabel();
        label_payment_due = new javax.swing.JLabel();
        button_add = new javax.swing.JButton();
        textfield_lens_material = new javax.swing.JTextField();
        textfield_lens_type = new javax.swing.JTextField();
        textfield_quantity = new javax.swing.JTextField();
        textfield_frame_length = new javax.swing.JTextField();
        textfield_nose_length = new javax.swing.JTextField();
        label_order_date_gen = new javax.swing.JLabel();
        date_delivery = new com.toedter.calendar.JDateChooser();
        label_payment_due_gen = new javax.swing.JLabel();
        textfield_payment_made = new javax.swing.JTextField();
        textfield_id = new javax.swing.JTextField();
        button_browse = new javax.swing.JButton();
        label_quantity1 = new javax.swing.JLabel();
        label_quantity2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_new_sale = new javax.swing.JTable();
        label_total = new javax.swing.JLabel();
        label_total_gen = new javax.swing.JLabel();
        button_done = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(909, 656));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(909, 656));

        label_title.setFont(new java.awt.Font("Cinzel Black", 1, 16)); // NOI18N
        label_title.setForeground(new java.awt.Color(0, 0, 0));
        label_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_title.setText("MUJNABIN OPTIC'S");
        label_title.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        label_title.setAlignmentY(0.0F);

        button_cancel.setBackground(new java.awt.Color(0, 204, 204));
        button_cancel.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        button_cancel.setText("CANCEL");
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 0, 51));

        label_receipt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_receipt.setForeground(new java.awt.Color(0, 0, 153));
        label_receipt.setText("RECEIPT NO. :");

        label_client.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_client.setForeground(new java.awt.Color(0, 0, 153));
        label_client.setText("CLIENT ID:");

        textfield_client.setBackground(new java.awt.Color(255, 255, 255));
        textfield_client.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_client.setForeground(new java.awt.Color(0, 0, 0));

        label_receipt_gen.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        label_receipt_gen.setForeground(new java.awt.Color(255, 255, 255));
        label_receipt_gen.setText("Number");

        label_emp.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_emp.setForeground(new java.awt.Color(0, 0, 153));
        label_emp.setText("EMPLOYEE ID:");

        label_emp_gen.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        label_emp_gen.setForeground(new java.awt.Color(255, 255, 255));
        label_emp_gen.setText("Number");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_receipt)
                    .addComponent(label_client))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(textfield_client, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 590, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(label_receipt_gen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_emp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label_emp_gen)
                        .addGap(92, 92, 92))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(label_emp)
                        .addComponent(label_emp_gen))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(label_receipt)
                        .addComponent(label_receipt_gen)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_client)
                    .addComponent(textfield_client, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 0, 255));

        label_product_id.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_product_id.setForeground(new java.awt.Color(0, 0, 0));
        label_product_id.setText("PRODUCT ID:");

        label_quantity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_quantity.setForeground(new java.awt.Color(0, 0, 0));
        label_quantity.setText("QUANTITY:");

        label_lens_type.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_lens_type.setForeground(new java.awt.Color(0, 0, 0));
        label_lens_type.setText("LENS TYPE:");

        label_lens_material.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_lens_material.setForeground(new java.awt.Color(0, 0, 0));
        label_lens_material.setText("LENS MATERIAL:");

        label_frame_lenght.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_frame_lenght.setForeground(new java.awt.Color(0, 0, 0));
        label_frame_lenght.setText("FRAME LENGTH:");

        label_nose_lenght.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_nose_lenght.setForeground(new java.awt.Color(0, 0, 0));
        label_nose_lenght.setText("NOSE LENTH:");

        label_order_date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_order_date.setForeground(new java.awt.Color(0, 0, 0));
        label_order_date.setText("ORDER/PURCHASE DATE:");

        label_delivery_date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_delivery_date.setForeground(new java.awt.Color(0, 0, 0));
        label_delivery_date.setText("DELIVERY DATE:");

        label_payment_made.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_payment_made.setForeground(new java.awt.Color(0, 0, 0));
        label_payment_made.setText("PAYMENT MADE:");

        label_payment_due.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_payment_due.setForeground(new java.awt.Color(0, 0, 0));
        label_payment_due.setText("PAYMENT DUE:");

        button_add.setBackground(new java.awt.Color(0, 0, 102));
        button_add.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_add.setText("ADD PRODUCT");
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });

        textfield_lens_material.setBackground(new java.awt.Color(255, 255, 255));
        textfield_lens_material.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_lens_material.setForeground(new java.awt.Color(0, 0, 0));

        textfield_lens_type.setBackground(new java.awt.Color(255, 255, 255));
        textfield_lens_type.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_lens_type.setForeground(new java.awt.Color(0, 0, 0));

        textfield_quantity.setBackground(new java.awt.Color(255, 255, 255));
        textfield_quantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_quantity.setForeground(new java.awt.Color(0, 0, 0));

        textfield_frame_length.setBackground(new java.awt.Color(255, 255, 255));
        textfield_frame_length.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_frame_length.setForeground(new java.awt.Color(0, 0, 0));

        textfield_nose_length.setBackground(new java.awt.Color(255, 255, 255));
        textfield_nose_length.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_nose_length.setForeground(new java.awt.Color(0, 0, 0));

        label_order_date_gen.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        label_order_date_gen.setForeground(new java.awt.Color(0, 0, 0));
        label_order_date_gen.setText("Number");

        date_delivery.setBackground(new java.awt.Color(255, 255, 255));
        date_delivery.setForeground(new java.awt.Color(0, 0, 0));
        date_delivery.setDateFormatString("yyyy-MM-dd");
        date_delivery.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        label_payment_due_gen.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        label_payment_due_gen.setForeground(new java.awt.Color(0, 0, 0));
        label_payment_due_gen.setText("0.0");

        textfield_payment_made.setBackground(new java.awt.Color(255, 255, 255));
        textfield_payment_made.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_payment_made.setForeground(new java.awt.Color(0, 0, 0));

        textfield_id.setBackground(new java.awt.Color(255, 255, 255));
        textfield_id.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_id.setForeground(new java.awt.Color(0, 0, 0));

        button_browse.setBackground(new java.awt.Color(0, 0, 102));
        button_browse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_browse.setText("BROWSE");
        button_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_browseActionPerformed(evt);
            }
        });

        label_quantity1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        label_quantity1.setForeground(new java.awt.Color(0, 0, 0));
        label_quantity1.setText("mm");

        label_quantity2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        label_quantity2.setForeground(new java.awt.Color(0, 0, 0));
        label_quantity2.setText("mm");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(268, 268, 268)
                                .addComponent(button_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(label_payment_made)
                                        .addGap(14, 14, 14))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(label_delivery_date)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(date_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfield_payment_made, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_lens_material)
                                    .addComponent(label_lens_type)
                                    .addComponent(label_quantity)
                                    .addComponent(label_product_id))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textfield_lens_type, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfield_lens_material, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfield_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfield_id, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(label_order_date)
                                .addGap(30, 30, 30)
                                .addComponent(label_order_date_gen))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_frame_lenght)
                                    .addComponent(label_nose_lenght))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(textfield_nose_length, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(label_quantity2))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(textfield_frame_length, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(label_quantity1)))))
                        .addGap(92, 92, 92))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(label_payment_due)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_payment_due_gen)
                        .addGap(28, 372, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(340, 340, 340)
                .addComponent(button_browse, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(46, 46, 46))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_product_id)
                    .addComponent(textfield_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(button_browse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfield_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_quantity))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_lens_type)
                    .addComponent(textfield_lens_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_lens_material)
                    .addComponent(textfield_lens_material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_frame_lenght)
                    .addComponent(textfield_frame_length, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_quantity1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_nose_lenght)
                    .addComponent(textfield_nose_length, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_quantity2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(date_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_delivery_date))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_add)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_order_date)
                    .addComponent(label_order_date_gen))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_payment_made)
                    .addComponent(textfield_payment_made, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_payment_due)
                    .addComponent(label_payment_due_gen))
                .addGap(60, 60, 60))
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        table_new_sale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SERIAL NO.", "PRODUCT ID", "QUANTITY", "DELIVERY DATE", "lENS TYPE", "LENS MATERIAL", "FRAME LENGTH", "NOSE LENGTH"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_new_sale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_new_saleMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_new_sale);

        label_total.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_total.setForeground(new java.awt.Color(255, 255, 255));
        label_total.setText("TOTAL:");

        label_total_gen.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        label_total_gen.setForeground(new java.awt.Color(0, 0, 0));
        label_total_gen.setText("0.0");

        button_done.setBackground(new java.awt.Color(51, 0, 102));
        button_done.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_done.setText("DONE");
        button_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_doneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(label_total)
                        .addGap(18, 18, 18)
                        .addComponent(label_total_gen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_done, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_total)
                    .addComponent(label_total_gen)
                    .addComponent(button_done, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(button_cancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(348, 348, 348)
                                .addComponent(label_title, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)))
                        .addGap(291, 291, 291))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_title, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(button_cancel)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_browseActionPerformed
        // TODO add your handling code here:
        if (permission_emp == 1)
        {
            
            viewer_product obj = new viewer_product(ob, 1, 1, null, this);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }
        
    }//GEN-LAST:event_button_browseActionPerformed

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed
        // TODO add your handling code here:
        if (textfield_id.getText().length()==0 || textfield_quantity.getText().length()==0 || textfield_lens_type.getText().length() == 0 || textfield_lens_material.getText().length() == 0 || textfield_frame_length.getText().length() == 0 || textfield_nose_length.getText().length() == 0) 
                JOptionPane.showMessageDialog(null, "EMPTY FIELDS DETECTED");
                
        else{
            try {
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");                             
                
                product = textfield_id.getText();
                quantity = textfield_quantity.getText();
                lens_type = textfield_lens_type.getText();
                lens_material = textfield_lens_material.getText();
                frame_length = textfield_frame_length.getText();
                nose_length = textfield_nose_length.getText();
                
                if (date_delivery.getDate() == null)
                    delivery_date = "NO DELIVERY";
                else
                  delivery_date = formatter.format(date_delivery.getDate());

                
                if (check() == 1)
                {
                    String[] tbdata = {String.valueOf(n), product, quantity, delivery_date, lens_type, lens_material, frame_length, nose_length};
                    
                    DefaultTableModel tblmod = (DefaultTableModel) table_new_sale.getModel();
                    tblmod.addRow(tbdata);
                    
                    row_count++;
                    n++;
                    
                    try {
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                        Statement stm = (Statement) con.createStatement();
                        ResultSet rs;
                        
                        String query = "SELECT unit_selling_price FROM product_info WHERE product_id = '" + product + "'";
                        rs = stm.executeQuery(query);
                        rs.next();
                        
                        double unit_price;
                        unit_price = Double.parseDouble(rs.getString(1));
                        total_price = (unit_price * Double.parseDouble(quantity)) + total_price;
                        label_total_gen.setText(String.valueOf(total_price));
                        
                    }
                    catch(SQLException sqlExp) {
                        JOptionPane.showMessageDialog(null,"DATABASE CONNECTION FAILED");
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(new_order_sales.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_button_addActionPerformed

    private void button_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_doneActionPerformed
        // TODO add your handling code here:
        if (textfield_payment_made.getText().length()==0 || textfield_client.getText().length()==0) 
            JOptionPane.showMessageDialog(null, "EMPTY FIELDS DETECTED");
        
        else{
            double due = total_price - Double.parseDouble(textfield_payment_made.getText());
            
            if (due < 0.0)
                due = 0.0;
            
            label_payment_due_gen.setText(String.valueOf(due));
            int x = 0;
            
            while (row_count > 0)
            {
                try
                {
                    product = table_new_sale.getValueAt(x, 1).toString();
                    quantity = table_new_sale.getValueAt(x, 2).toString();
                    delivery_date = table_new_sale.getValueAt(x, 3).toString();
                    lens_type = table_new_sale.getValueAt(x, 4).toString();
                    lens_material = table_new_sale.getValueAt(x, 5).toString();
                    frame_length = table_new_sale.getValueAt(x, 6).toString();
                    nose_length = table_new_sale.getValueAt(x, 7).toString();

                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                    Statement stm = con.createStatement();
                    ResultSet rs;
                    
                    stm.execute("SET FOREIGN_KEY_CHECKS=0");

                    String query; 

                    if (delivery_date.equals("NO DELIVERY")){
                       query = "INSERT INTO `client_order_specs`(`receipt_no`, `product_id`, `quantity`, `lens_type`, `lens_material`, `frame_length`, `nose_length`, `order_status`) VALUES ('" + label_receipt_gen.getText() + "', '" + product + "', " + quantity + ", '" + lens_type + "', '" + lens_material +"', " + frame_length + ", " + nose_length + ", 'New')";
                    }
                    else{
                        query = "INSERT INTO `client_order_specs`(`receipt_no`, `product_id`, `quantity`, `lens_type`, `lens_material`, `frame_length`, `nose_length`, `delivery_date`, `order_status`) VALUES ('" + label_receipt_gen.getText() + "', '" + product + "', " + quantity + ", '" + lens_type + "', '" + lens_material +"', " + frame_length + ", " + nose_length + ", '" + delivery_date + "', 'New')";
                    }


                    stm = con.createStatement();
                    stm.executeUpdate(query);
                    
                    query = "SELECT quantity FROM product_info WHERE product_id = '" + product + "'";
                    rs = stm.executeQuery(query);
                    rs.next();

                    int old_quantity = Integer.parseInt(rs.getString(1));                                        
                    int quantity_update = old_quantity - Integer.parseInt(quantity);
                    
                    query = "UPDATE product_info SET quantity = " + String.valueOf(quantity_update) + " WHERE product_id = '" + product + "'";

                    stm = con.createStatement();
                    stm.executeUpdate(query);
                    
                    stm.execute("SET FOREIGN_KEY_CHECKS=1");
                
                }
                
                catch(SQLException sqlExp){
                    JOptionPane.showMessageDialog(null,sqlExp);
                }
                    
                row_count--;
                x++;
            }
            
            try{
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                Statement stm = con.createStatement();
                
                stm.execute("SET FOREIGN_KEY_CHECKS=0");
                
                String due_con;
                if(due == 0.00)
                    due_con = "YES";
                else
                    due_con = "NO";

                String query = "INSERT INTO `sales_records`(`receipt_no`, `client_id`, `payment`, `order_date`, `employee_id`, `pay_cleared`) VALUES ('" + label_receipt_gen.getText() + "', '" + textfield_client.getText() + "', " + textfield_payment_made.getText() + ", '" + label_order_date_gen.getText() + "', '" + label_emp_gen.getText() + "', '" + due_con + "')";

                stm = con.createStatement();
                stm.executeUpdate(query);
                
                stm.execute("SET FOREIGN_KEY_CHECKS=1");
            }
            catch(SQLException sqlExp){
                    JOptionPane.showMessageDialog(null,sqlExp);
            }
            
            //PRINT RECEIPT
            String msg = "PURCHASE CONFIRMED\n\nTOTAL AMOUNT: " + String.valueOf(total_price) + "\n\nPAID: " + textfield_payment_made.getText() + "\n\nDUE: " + String.valueOf(due);
            JOptionPane.showMessageDialog(null,msg);
            
            new_order_sales obj = new new_order_sales(ob);
            dispose();
            obj.show();
        }
    }//GEN-LAST:event_button_doneActionPerformed

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
        // TODO add your handling code here:
        if (permission_orders == 1 || permission_emp == 1)
        {
            dispose();
        
            sales_client_orders obj = new sales_client_orders(ob);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }
    }//GEN-LAST:event_button_cancelActionPerformed

    private void table_new_saleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_new_saleMouseClicked
        // TODO add your handling code here:
        int delcon = JOptionPane.showConfirmDialog(null,"DO YOU WANT TO REMOVE SELECTED ITEM FROM PURCHASE LIST?");
        
        if(delcon == JOptionPane.YES_OPTION){
            DefaultTableModel tblmod = (DefaultTableModel) table_new_sale.getModel();
            tblmod.removeRow(table_new_sale.getSelectedRow());
            
            textfield_id.setText("");
            textfield_quantity.setText("");
            textfield_lens_type.setText("");
            textfield_lens_material.setText("");
            textfield_frame_length.setText("");
            textfield_nose_length.setText("");
        }
    }//GEN-LAST:event_table_new_saleMouseClicked

    int check() throws ParseException{
        int fcheck = 0;
        int scheck = 0;
        
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
            Statement stm = con.createStatement();
            ResultSet rs;

            String query = "SELECT quantity FROM product_info WHERE product_id = '" + product + "'";
            rs = stm.executeQuery(query);
            rs.next();
            
            if(Integer.parseInt(rs.getString(1)) == 0)
                JOptionPane.showMessageDialog(null, "ITEM STOCK IS EMPTY");
            else if(Integer.parseInt(quantity) > Integer.parseInt(rs.getString(1)))
                JOptionPane.showMessageDialog(null, "NOT ENOUGH STOCK OF ITEM AVAILABLE FOR PURCHASE");
            else
                fcheck = 1;
            
            con.close();           
            
        }
        catch(SQLException sqlExp){
            JOptionPane.showMessageDialog(null,sqlExp);
        }
        
         if (delivery_date.equals("NO DELIVERY")){
             scheck = 1;
         }
         else{
             Date date_sel = new SimpleDateFormat("yyyy-MM-dd").parse(delivery_date);
             Date date_today = new SimpleDateFormat("yyyy-MM-dd").parse(label_order_date_gen.getText());
             long diff = date_sel.getTime() - date_today.getTime();

             TimeUnit time = TimeUnit.DAYS; 
             long difference = time.convert(diff, TimeUnit.MILLISECONDS);

             if (difference < 0)
                JOptionPane.showMessageDialog(null, "DELIVERY DATE HAS PASSED");
             else
                scheck = 1;
         }

        
        if (fcheck == 1 && scheck == 1)
            return 1;
        else
            return 0;
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_add;
    private javax.swing.JButton button_browse;
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_done;
    private com.toedter.calendar.JDateChooser date_delivery;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_client;
    private javax.swing.JLabel label_delivery_date;
    private javax.swing.JLabel label_emp;
    private javax.swing.JLabel label_emp_gen;
    private javax.swing.JLabel label_frame_lenght;
    private javax.swing.JLabel label_lens_material;
    private javax.swing.JLabel label_lens_type;
    private javax.swing.JLabel label_nose_lenght;
    private javax.swing.JLabel label_order_date;
    private javax.swing.JLabel label_order_date_gen;
    private javax.swing.JLabel label_payment_due;
    private javax.swing.JLabel label_payment_due_gen;
    private javax.swing.JLabel label_payment_made;
    private javax.swing.JLabel label_product_id;
    private javax.swing.JLabel label_quantity;
    private javax.swing.JLabel label_quantity1;
    private javax.swing.JLabel label_quantity2;
    private javax.swing.JLabel label_receipt;
    private javax.swing.JLabel label_receipt_gen;
    private javax.swing.JLabel label_title;
    private javax.swing.JLabel label_total;
    private javax.swing.JLabel label_total_gen;
    private javax.swing.JTable table_new_sale;
    private javax.swing.JTextField textfield_client;
    private javax.swing.JTextField textfield_frame_length;
    private javax.swing.JTextField textfield_id;
    private javax.swing.JTextField textfield_lens_material;
    private javax.swing.JTextField textfield_lens_type;
    private javax.swing.JTextField textfield_nose_length;
    private javax.swing.JTextField textfield_payment_made;
    private javax.swing.JTextField textfield_quantity;
    // End of variables declaration//GEN-END:variables
}
