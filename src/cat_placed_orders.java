
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hp
 */
public class cat_placed_orders extends javax.swing.JFrame {

    /**
     * Creates new form cat_placed_orders
     */
    set_id ob;
    int permission_supplier;
    int permission_emp, permission_product, permission_supplies;
    ResultSet rs1, rs2, rs3;
    String prod_sup;
    int click = 0;
    
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
    String date_supply_search;
    
    public cat_placed_orders(set_id obj) {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        ob = obj;
        permission_emp = ob.employee_perm;
        permission_supplier = ob.supplier_perm;
        permission_product = ob.product_perm;
        permission_supplies = ob.supplies_perm;

        date_search.setVisible(false);
        
        setIconImage(new ImageIcon(".\\icons\\Icon.png").getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_title = new javax.swing.JLabel();
        button_goback = new javax.swing.JButton();
        button_logout = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        button_add_cat = new javax.swing.JButton();
        date_delivery = new com.toedter.calendar.JDateChooser();
        button_suppliers = new javax.swing.JButton();
        button_add = new javax.swing.JButton();
        label_date = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_supply = new javax.swing.JTable();
        button_update = new javax.swing.JButton();
        button_delete = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        combobox_search = new javax.swing.JComboBox<>();
        button_search = new javax.swing.JButton();
        texrfield_search = new javax.swing.JTextField();
        label_enter = new javax.swing.JLabel();
        button_viewall = new javax.swing.JButton();
        date_search = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_products = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        label_title.setFont(new java.awt.Font("Cinzel Black", 1, 16)); // NOI18N
        label_title.setForeground(new java.awt.Color(0, 0, 0));
        label_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_title.setText("MUJNABIN OPTIC'S");
        label_title.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        label_title.setAlignmentY(0.0F);

        button_goback.setBackground(new java.awt.Color(0, 204, 204));
        button_goback.setFont(new java.awt.Font("Times New Roman", 2, 11)); // NOI18N
        button_goback.setText("GO BACK");
        button_goback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_gobackActionPerformed(evt);
            }
        });

        button_logout.setBackground(new java.awt.Color(51, 0, 153));
        button_logout.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        button_logout.setText("LOG OUT");
        button_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_logoutActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(153, 0, 255));

        button_add_cat.setBackground(new java.awt.Color(0, 0, 153));
        button_add_cat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_add_cat.setText("ADD TO CATALOGUE");
        button_add_cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_add_catActionPerformed(evt);
            }
        });

        date_delivery.setBackground(new java.awt.Color(255, 255, 255));
        date_delivery.setForeground(new java.awt.Color(0, 0, 0));
        date_delivery.setDateFormatString("yyyy-MM-dd");
        date_delivery.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        button_suppliers.setBackground(new java.awt.Color(51, 0, 153));
        button_suppliers.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_suppliers.setText("SUPPLIERS");
        button_suppliers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_suppliersActionPerformed(evt);
            }
        });

        button_add.setBackground(new java.awt.Color(0, 0, 153));
        button_add.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_add.setText("ADD NEW SUPPLY");
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });

        label_date.setBackground(new java.awt.Color(255, 255, 255));
        label_date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_date.setForeground(new java.awt.Color(0, 0, 0));
        label_date.setText("SELECT DATE:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(label_date)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(date_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(button_add, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button_suppliers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_add_cat, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(button_add_cat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(date_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label_date))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_suppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_add, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        table_supply.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SUPPLY NO", "SUPPLIER ID", "SUPPLIER NAME", "ORDER DATE", "DELIVERY DATE", "DELIVERY STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_supply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_supplyMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_supply);

        button_update.setBackground(new java.awt.Color(0, 0, 153));
        button_update.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_update.setText("UPDATE SUPPLY INFORMATION");
        button_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_updateActionPerformed(evt);
            }
        });

        button_delete.setBackground(new java.awt.Color(0, 0, 153));
        button_delete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_delete.setText("REMOVE SUPPLY");
        button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_delete, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                    .addComponent(button_update, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
                .addGap(182, 182, 182))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(button_update)
                .addGap(18, 18, 18)
                .addComponent(button_delete)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 0, 51));

        combobox_search.setBackground(new java.awt.Color(255, 255, 255));
        combobox_search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        combobox_search.setForeground(new java.awt.Color(0, 0, 0));
        combobox_search.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SUPPLY NO", "SUPPLIER ID", "SUPPLIER NAME", "ORDER DATE", "DELIVERY DATE", "PRODUCT ID" }));
        combobox_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_searchActionPerformed(evt);
            }
        });

        button_search.setBackground(new java.awt.Color(0, 0, 153));
        button_search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_search.setText("SEARCH");
        button_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_searchActionPerformed(evt);
            }
        });

        texrfield_search.setBackground(new java.awt.Color(255, 255, 255));
        texrfield_search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        texrfield_search.setForeground(new java.awt.Color(0, 0, 0));

        label_enter.setBackground(new java.awt.Color(255, 255, 255));
        label_enter.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_enter.setForeground(new java.awt.Color(0, 0, 0));
        label_enter.setText("ENTER:");

        button_viewall.setBackground(new java.awt.Color(0, 0, 153));
        button_viewall.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_viewall.setText("VIEW ALL");
        button_viewall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_viewallActionPerformed(evt);
            }
        });

        date_search.setBackground(new java.awt.Color(255, 255, 255));
        date_search.setForeground(new java.awt.Color(0, 0, 0));
        date_search.setDateFormatString("yyyy-MM-dd");
        date_search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(button_viewall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(117, 117, 117))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(label_enter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(date_search, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(texrfield_search, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addComponent(combobox_search, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(button_search, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addGap(182, 182, 182))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(button_viewall)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(texrfield_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(combobox_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label_enter, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(33, 33, 33)
                .addComponent(date_search, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(button_search)
                .addGap(37, 37, 37))
        );

        jPanel6.setBackground(new java.awt.Color(153, 153, 255));

        table_products.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT ID", "BRAND", "UNITS ORDERED", "UNIT COST PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_productsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_products);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(label_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(84, 84, 84))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(button_goback)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(button_logout))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_title)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_goback)
                    .addComponent(button_logout))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_logoutActionPerformed
        // TODO add your handling code here:
        dispose();
        
        login_main obj = new login_main();
        obj.show();
    }//GEN-LAST:event_button_logoutActionPerformed

    private void button_gobackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_gobackActionPerformed
        // TODO add your handling code here:
        if (permission_emp == 1 || permission_product == 1 || permission_supplies == 1)
        {
            dispose();
            
            catalogue obj = new catalogue(ob);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }
        
    }//GEN-LAST:event_button_gobackActionPerformed

    private void button_suppliersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_suppliersActionPerformed
        // TODO add your handling code here:
        if (permission_supplier == 1)
        {
            dispose();
        
            suppliers obj = new suppliers(ob);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }
    }//GEN-LAST:event_button_suppliersActionPerformed

    private void button_add_catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_add_catActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String delivery = formatter.format(date_delivery.getDate());
        
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
            Statement stm1 = (Statement) con.createStatement();
            

            String query = "SELECT supplies_info.supply_no, product_id, quantity FROM ordered_supplies,supplies_info WHERE ordered_supplies.supply_no = supplies_info.supply_no AND delivery_date = '" + delivery + "'";
            rs1 = stm1.executeQuery(query);
            int x = 0;
            int y = 0;
            
            while (rs1.next()){
                x = 1;
                String sup_no = rs1.getString("supply_no");
                String sup_product = rs1.getString("product_id");
                int sup_quantity = rs1.getInt("quantity");
                
                if(y == 0){
                    Statement stm2 = (Statement) con.createStatement();
                    query = "SELECT delivery_status FROM supplies_info WHERE supply_no = '" + sup_no + "' AND delivery_date = '" + delivery + "' AND delivery_status = 'DELIVERED'";
                    rs2 = stm2.executeQuery(query);                
                    if(rs2.next()){
                        String msg = "DELIVERIES ALREADY ADDED TO CATALOGUE FOR SUPPLY NO:\t" + sup_no + "\tAND PRODUCT NO.\t" + sup_product;
                        JOptionPane.showMessageDialog(null, msg);
                        x = 2;
                        y = 0;
                        continue;
                    }
                    y = 1;
                }
                
                Statement stm3 = (Statement) con.createStatement();
                stm3.execute("SET FOREIGN_KEY_CHECKS=0");

                int old_quantity = 0;
                query = "SELECT quantity FROM product_info WHERE product_id = '" + sup_product + "'";
                rs3 = stm3.executeQuery(query);
                if(rs3.next())
                    old_quantity = rs3.getInt("quantity");

                int update_quantity = sup_quantity + old_quantity;

                query = "UPDATE product_info SET quantity = " + String.valueOf(update_quantity) + " WHERE product_id = '" + sup_product + "'";
                stm3.executeUpdate(query);

                query = "UPDATE supplies_info SET delivery_status = 'DELIVERED' WHERE supply_no = '" + sup_no + "'";
                stm3.executeUpdate(query);

                stm3.execute("SET FOREIGN_KEY_CHECKS=1");
                
            }
            
            if(x == 0)
                JOptionPane.showMessageDialog(null,"NO DELIVERIES ON SELECTED DATE"); 
            
            if(x == 1)
                JOptionPane.showMessageDialog(null,"ITEMS ADDED TO CATALOGUE");
            
        }
        catch(SQLException sqlExp) {
            JOptionPane.showMessageDialog(null,sqlExp);
        }
    }//GEN-LAST:event_button_add_catActionPerformed

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed
        // TODO add your handling code here:
        if (permission_emp == 1)
        {
            dispose();
        
            new_supply obj = new new_supply(ob);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }
        
    }//GEN-LAST:event_button_addActionPerformed

    private void button_viewallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_viewallActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblmod1 = (DefaultTableModel) table_supply.getModel();
        tblmod1.setRowCount(0);
        DefaultTableModel tblmod2 = (DefaultTableModel) table_products.getModel();
        tblmod2.setRowCount(0);


        supply_viewer(1);
    }//GEN-LAST:event_button_viewallActionPerformed

    private void button_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_searchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblmod1 = (DefaultTableModel) table_supply.getModel();
        tblmod1.setRowCount(0);
        DefaultTableModel tblmod2 = (DefaultTableModel) table_products.getModel();
        tblmod2.setRowCount(0);


        String choice = combobox_search.getSelectedItem().toString();
        
        if (choice.equals("SUPPLY NO"))
            supply_viewer(2);
        
        if (choice.equals("SUPPLIER ID"))
            supply_viewer(3);
        
        if (choice.equals("SUPPLIER NAME"))
            supply_viewer(4);
        
        if (choice.equals("ORDER DATE")){
            date_supply_search = formatter.format(date_search.getDate());
            supply_viewer(5);
        }  
        
        if (choice.equals("DELIVERY DATE")){
            date_supply_search = formatter.format(date_search.getDate());
            supply_viewer(6);
        }            
        
        if (choice.equals("PRODUCT ID"))
            supply_viewer(7);
    }//GEN-LAST:event_button_searchActionPerformed

    private void table_supplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_supplyMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2){
            int srow = table_supply.getSelectedRow();
            
            DefaultTableModel tblmod = (DefaultTableModel) table_products.getModel();
            tblmod.setRowCount(0);
            
            String supply_no = table_supply.getValueAt(srow, 0).toString();
            prod_sup = supply_no;
            click = 1;
            
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                Statement stm = con.createStatement();
                ResultSet rs;
                String query;

                query = "SELECT ordered_supplies.product_id, brand, ordered_supplies.quantity, unit_cost_price FROM ordered_supplies, product_info WHERE supply_no = '" + supply_no + "' AND ordered_supplies.product_id = product_info.product_id";

                rs = stm.executeQuery(query);

                while (rs.next()) {
                    String product_id = rs.getString("product_id");
                    String brand = rs.getString("brand");
                    String quantity = rs.getString("quantity");
                    String unit_cost_price = rs.getString("unit_cost_price");

                    String[] tbdata = {product_id, brand, quantity, unit_cost_price};

                    tblmod = (DefaultTableModel) table_products.getModel();
                    tblmod.addRow(tbdata);

                }

                con.close();
            }
            catch (SQLException exp) {
                JOptionPane.showMessageDialog(null, exp);
            }
        }
    }//GEN-LAST:event_table_supplyMouseClicked

    private void table_productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_productsMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2){
            int delcon = JOptionPane.showConfirmDialog(null,"DO YOU WANT TO REMOVE SELECTED PRODUCT FROM THE SUPPLY?");
            
            if(delcon == JOptionPane.YES_OPTION){
                int srow = table_products.getSelectedRow();
                String product_id = table_products.getValueAt(srow, 0).toString();
                
                try{
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                    Statement stm = con.createStatement();
                    stm.execute("SET FOREIGN_KEY_CHECKS=0");

                    String query = "DELETE FROM ordered_supplies WHERE product_id = '" + product_id + "' AND supply_no = '" + prod_sup + "'";
                    stm.executeUpdate(query);

                    stm.execute("SET FOREIGN_KEY_CHECKS=1");
                    con.close();

                    JOptionPane.showMessageDialog(null, "PRODUCT REMOVED FROM SUPPLY ORDER");
                }
                catch (SQLException sqlExp) {
                    JOptionPane.showMessageDialog(null, sqlExp);
                }
                
                DefaultTableModel tblmod = (DefaultTableModel) table_products.getModel();
                tblmod.removeRow(table_products.getSelectedRow());
            }
        }
    }//GEN-LAST:event_table_productsMouseClicked

    private void button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_deleteActionPerformed
        // TODO add your handling code here:
        int delcon = JOptionPane.showConfirmDialog(null,"ARE YOU SURE YOU WANT TO REMOVE THE SELECTED SUPPLY?");
            
        if(delcon == JOptionPane.YES_OPTION){
            int srow = table_supply.getSelectedRow();
            String supply_no = table_supply.getValueAt(srow, 0).toString();

            try{
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                Statement stm = con.createStatement();
                stm.execute("SET FOREIGN_KEY_CHECKS=0");

                String query = "DELETE FROM supplies_info WHERE supply_no = '" + supply_no + "'";
                stm.executeUpdate(query);
                
                query = "DELETE FROM ordered_supplies WHERE supply_no = '" + supply_no + "'";
                stm.executeUpdate(query);

                stm.execute("SET FOREIGN_KEY_CHECKS=1");
                con.close();

                JOptionPane.showMessageDialog(null, "SUPPLY REMOVED");
            }
            catch (SQLException sqlExp) {
                JOptionPane.showMessageDialog(null, sqlExp);
            }

            DefaultTableModel tblmod = (DefaultTableModel) table_supply.getModel();
            tblmod.removeRow(table_supply.getSelectedRow());
            DefaultTableModel dataModel = (DefaultTableModel) table_products.getModel();
            dataModel.setRowCount(0);
        }
    }//GEN-LAST:event_button_deleteActionPerformed

    private void button_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_updateActionPerformed
        // TODO add your handling code here:
        int row_sup = 0;
        int row_prod = 0;
        
        String supply_no, supplier_id, order_date, delivery_date, delivery_status, product_id, quantity;
        
        //SUPPLY TABLE
        while (row_sup < table_supply.getRowCount())
        {
            try
            {
                supply_no = table_supply.getValueAt(row_sup, 0).toString();
                supplier_id = table_supply.getValueAt(row_sup, 1).toString();
                order_date = table_supply.getValueAt(row_sup, 3).toString();
                delivery_date = table_supply.getValueAt(row_sup, 4).toString();
                delivery_status = table_supply.getValueAt(row_sup, 5).toString();

                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                Statement stm = con.createStatement();

                stm.execute("SET FOREIGN_KEY_CHECKS=0");

                String query = "UPDATE `supplies_info` SET `supplier_id`= '" + supplier_id + "',`order_date`= '" + order_date + "',`delivery_date` = '" + delivery_date + "',`delivery_status`= '" + delivery_status + "' WHERE `supply_no` = '" + supply_no + "'";

                stm = con.createStatement();
                stm.executeUpdate(query); 

                stm.execute("SET FOREIGN_KEY_CHECKS=1");

            }

            catch(SQLException sqlExp){
                JOptionPane.showMessageDialog(null,sqlExp);
            }
            
            row_sup++;
        }
        
        //PRODUCT TABLE
        if(click == 1){
                        
            while (row_prod < table_products.getRowCount())
            {
                try
                {
                    product_id = table_products.getValueAt(row_sup, 0).toString();
                    quantity = table_products.getValueAt(row_sup, 2).toString();

                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                    Statement stm = con.createStatement();

                    stm.execute("SET FOREIGN_KEY_CHECKS=0");

                    String query = "UPDATE `ordered_supplies` SET `quantity` = " + quantity + " WHERE `product_id` = '" + product_id + "' AND `supply_no` = '" + prod_sup + "'";

                    stm = con.createStatement();
                    stm.executeUpdate(query); 

                    stm.execute("SET FOREIGN_KEY_CHECKS=1");

                }

                catch(SQLException sqlExp){
                    JOptionPane.showMessageDialog(null,sqlExp);
                }

                row_prod++;
            }
        }
        
        JOptionPane.showMessageDialog(null, "UPDATES SUCCESSFUL!");
        
    }//GEN-LAST:event_button_updateActionPerformed

    private void combobox_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_searchActionPerformed
        // TODO add your handling code here:
        if(combobox_search.getSelectedItem().toString().equals("ORDER DATE")|| combobox_search.getSelectedItem().toString().equals("DELIVERY DATE")){
            date_search.setVisible(true);
        }
        else{
            date_search.setVisible(false);
        }
    }//GEN-LAST:event_combobox_searchActionPerformed

    void supply_viewer(int x){
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
            Statement stm = con.createStatement();
            ResultSet rs;
            String query;
            
            switch (x) {
                case 2://SUPPLY NO
                    query = "SELECT supply_no, supplies_info.supplier_id, supplier_name, order_date, delivery_date, delivery_status FROM supplies_info, supplier_info WHERE supplies_info.supplier_id = supplier_info.supplier_id AND supply_no = '" + texrfield_search.getText() + "'";
                    
                    break;
                case 3://SUPPLIER ID
                    query = "SELECT supply_no, supplies_info.supplier_id, supplier_name, order_date, delivery_date, delivery_status FROM supplies_info, supplier_info WHERE supplies_info.supplier_id = supplier_info.supplier_id AND supplies_info.supplier_id = '" + texrfield_search.getText() + "'";
                    
                   
                    break;
                case 4: //SUPPLIER NAME
                    query = "SELECT supply_no, supplies_info.supplier_id, supplier_name, order_date, delivery_date, delivery_status FROM supplies_info, supplier_info WHERE supplies_info.supplier_id = supplier_info.supplier_id AND supplier_name = '" + texrfield_search.getText() + "'";
                    
                    
                    break;
                case 5://ORDER DATE                                        
                    query = "SELECT supply_no, supplies_info.supplier_id, supplier_name, order_date, delivery_date, delivery_status FROM supplies_info, supplier_info WHERE supplies_info.supplier_id = supplier_info.supplier_id AND order_date = '" + date_supply_search + "'";
                    
                    
                    break;
                case 6://DELIVERY DATE 
                    query = "SELECT supply_no, supplies_info.supplier_id, supplier_name, order_date, delivery_date, delivery_status FROM supplies_info, supplier_info WHERE supplies_info.supplier_id = supplier_info.supplier_id AND delivery_date = '" + date_supply_search + "'";
                    
                    
                    break;
                case 7://PRODUCT ID
                    query = "SELECT DISTINCT(ordered_supplies.supply_no), supplies_info.supplier_id, supplier_name, `order_date`, `delivery_date`, `delivery_status` FROM `ordered_supplies`, supplies_info, supplier_info WHERE product_id = '" + texrfield_search.getText() + "' AND ordered_supplies.supply_no = supplies_info.supply_no AND supplies_info.supplier_id = supplier_info.supplier_id";
                    
                    
                    break;
                default://VIEW ALL
                    query = "SELECT supply_no, supplies_info.supplier_id, supplier_name, order_date, delivery_date, delivery_status FROM supplies_info, supplier_info WHERE supplies_info.supplier_id = supplier_info.supplier_id";
                    break;
            }
            
            rs = stm.executeQuery(query);
            
            while (rs.next()) {
                String supply_no = rs.getString("supply_no");
                String supplier_id = rs.getString("supplier_id");
                String supplier_name = rs.getString("supplier_name");
                String order_date = rs.getString("order_date");
                String delivery_date = rs.getString("delivery_date");
                String delivery_status = rs.getString("delivery_status");
                
                String[] tbdata = {supply_no, supplier_id, supplier_name, order_date, delivery_date, delivery_status};
                
                DefaultTableModel tblmod = (DefaultTableModel) table_supply.getModel();
                tblmod.addRow(tbdata);
                
            }
            
            con.close();
        }
        catch (SQLException exp) {
            JOptionPane.showMessageDialog(null, exp);
        }
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_add;
    private javax.swing.JButton button_add_cat;
    private javax.swing.JButton button_delete;
    private javax.swing.JButton button_goback;
    private javax.swing.JButton button_logout;
    private javax.swing.JButton button_search;
    private javax.swing.JButton button_suppliers;
    private javax.swing.JButton button_update;
    private javax.swing.JButton button_viewall;
    private javax.swing.JComboBox<String> combobox_search;
    private com.toedter.calendar.JDateChooser date_delivery;
    private com.toedter.calendar.JDateChooser date_search;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_date;
    private javax.swing.JLabel label_enter;
    private javax.swing.JLabel label_title;
    private javax.swing.JTable table_products;
    private javax.swing.JTable table_supply;
    private javax.swing.JTextField texrfield_search;
    // End of variables declaration//GEN-END:variables
}
