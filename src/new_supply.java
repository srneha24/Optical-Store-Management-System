import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hp
 */
public class new_supply extends javax.swing.JFrame {

    /**
     * Creates new form new_supply
     */
    int row_count = 0;
    String setID;
    set_id ob;
    int permission_emp, permission_supplies;
    String supplier_id, supply_no, product, quantity, order_date, delivery_date;
    double total_price = 0.0;
    
    public new_supply(set_id obj) {
        initComponents();
        settingID();
        label_supply_gen.setText(setID);
        label_order_date_gen.setText(java.time.LocalDate.now().toString());
        
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        ob = obj;
        permission_emp = ob.employee_perm;
        permission_supplies = ob.supplies_perm;
        
        setIconImage(new ImageIcon(".\\icons\\Icon.png").getImage());
    }
    
    public void sup(int n, String s){
        if (n == 1){
            textfield_supplier.setText(s);
        }
        
        if(n == 2){
            textfield_product_id.setText(s);
        }
    }
    
    void settingID()
    {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
            Statement stm = (Statement) con.createStatement();
            ResultSet rs;
                 
            rs = stm.executeQuery("SELECT MAX(supply_no) FROM `supplies_info`");
            rs.next();
            
            String set_id_str;
            set_id_str = rs.getString(1);
            
            String sub_set_id_str = set_id_str.substring(1);                
            int new_id = Integer.parseInt(sub_set_id_str) + 1;
            setID = "P" + String.valueOf(new_id);
            
        }
        catch(SQLException sqlExp) {
            JOptionPane.showMessageDialog(null,"DATABASE CONNECTION FAILED");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        label_product_id = new javax.swing.JLabel();
        textfield_product_id = new javax.swing.JTextField();
        label_quantity = new javax.swing.JLabel();
        textfield_quantity = new javax.swing.JTextField();
        button_browse = new javax.swing.JButton();
        label_supply = new javax.swing.JLabel();
        label_supplier = new javax.swing.JLabel();
        label_supply_gen = new javax.swing.JLabel();
        textfield_supplier = new javax.swing.JTextField();
        button_supplier = new javax.swing.JButton();
        button_add = new javax.swing.JButton();
        label_order_date = new javax.swing.JLabel();
        label_order_date_gen = new javax.swing.JLabel();
        label_delivery_date = new javax.swing.JLabel();
        date_delivery = new com.toedter.calendar.JDateChooser();
        button_ok = new javax.swing.JButton();
        button_cancel = new javax.swing.JButton();
        label_total = new javax.swing.JLabel();
        label_total_gen = new javax.swing.JLabel();
        label_title = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_new_supply = new javax.swing.JTable();
        label_new_supply1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(909, 626));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 0, 255));

        label_product_id.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_product_id.setForeground(new java.awt.Color(0, 0, 0));
        label_product_id.setText("PRODUCT ID:");

        textfield_product_id.setBackground(new java.awt.Color(255, 255, 255));
        textfield_product_id.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_product_id.setForeground(new java.awt.Color(0, 0, 0));

        label_quantity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_quantity.setForeground(new java.awt.Color(0, 0, 0));
        label_quantity.setText("QUANTITY:");

        textfield_quantity.setBackground(new java.awt.Color(255, 255, 255));
        textfield_quantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_quantity.setForeground(new java.awt.Color(0, 0, 0));

        button_browse.setBackground(new java.awt.Color(0, 0, 102));
        button_browse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_browse.setText("BROWSE");
        button_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_browseActionPerformed(evt);
            }
        });

        label_supply.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_supply.setForeground(new java.awt.Color(0, 0, 0));
        label_supply.setText("SUPPLY NO.:");

        label_supplier.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_supplier.setForeground(new java.awt.Color(0, 0, 0));
        label_supplier.setText("SUPPLIER ID:");

        label_supply_gen.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        label_supply_gen.setForeground(new java.awt.Color(255, 255, 255));
        label_supply_gen.setText("Number");

        textfield_supplier.setBackground(new java.awt.Color(255, 255, 255));
        textfield_supplier.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        textfield_supplier.setForeground(new java.awt.Color(0, 0, 0));

        button_supplier.setBackground(new java.awt.Color(0, 0, 102));
        button_supplier.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_supplier.setText("SEARCH");
        button_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_supplierActionPerformed(evt);
            }
        });

        button_add.setBackground(new java.awt.Color(0, 0, 102));
        button_add.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_add.setText("ADD PRODUCT");
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });

        label_order_date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_order_date.setForeground(new java.awt.Color(0, 0, 0));
        label_order_date.setText("ORDER DATE:");

        label_order_date_gen.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        label_order_date_gen.setForeground(new java.awt.Color(0, 0, 0));
        label_order_date_gen.setText("Number");

        label_delivery_date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_delivery_date.setForeground(new java.awt.Color(0, 0, 0));
        label_delivery_date.setText("DELIVERY DATE:");

        date_delivery.setBackground(new java.awt.Color(255, 255, 255));
        date_delivery.setForeground(new java.awt.Color(0, 0, 0));
        date_delivery.setDateFormatString("yyyy-MM-dd");
        date_delivery.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        button_ok.setBackground(new java.awt.Color(0, 0, 153));
        button_ok.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_ok.setText("OK");
        button_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_okActionPerformed(evt);
            }
        });

        button_cancel.setBackground(new java.awt.Color(0, 0, 153));
        button_cancel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        button_cancel.setText("CANCEL");
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });

        label_total.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label_total.setForeground(new java.awt.Color(0, 0, 0));
        label_total.setText("TOTAL:");

        label_total_gen.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        label_total_gen.setForeground(new java.awt.Color(0, 0, 0));
        label_total_gen.setText("0.0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(button_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(button_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(542, 542, 542))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(label_quantity)
                                    .addGap(27, 27, 27)
                                    .addComponent(textfield_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(label_product_id)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textfield_product_id, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(button_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(label_supply)
                                        .addComponent(label_supplier))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(textfield_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_supply_gen))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(label_delivery_date)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(label_order_date)
                                .addGap(40, 40, 40)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_order_date_gen)
                            .addComponent(date_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(label_total)
                        .addGap(30, 30, 30)
                        .addComponent(label_total_gen))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(button_add)
                        .addGap(35, 35, 35)
                        .addComponent(button_browse, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_supply)
                    .addComponent(label_supply_gen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_supplier)
                    .addComponent(textfield_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(button_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_product_id)
                    .addComponent(textfield_product_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfield_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_quantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_browse, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_add))
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_order_date_gen, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_order_date))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(date_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_delivery_date))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_total)
                    .addComponent(label_total_gen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_cancel)
                    .addComponent(button_ok))
                .addGap(125, 125, 125))
        );

        label_title.setFont(new java.awt.Font("Cinzel Black", 1, 16)); // NOI18N
        label_title.setForeground(new java.awt.Color(0, 0, 0));
        label_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_title.setText("MUJNABIN OPTIC'S");
        label_title.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        label_title.setAlignmentY(0.0F);

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        table_new_supply.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SERIAL NO.", "PRODUCT ID", "QUANTITY", "UNIT PRICE", "TOTAL PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_new_supply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_new_supplyMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_new_supply);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        label_new_supply1.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        label_new_supply1.setForeground(new java.awt.Color(0, 0, 0));
        label_new_supply1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_new_supply1.setText("NEW SUPPLY");
        label_new_supply1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        label_new_supply1.setAlignmentY(0.0F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(label_new_supply1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(331, 331, 331))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addComponent(label_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(343, 343, 343))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_title)
                .addGap(60, 60, 60)
                .addComponent(label_new_supply1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_browseActionPerformed
        // TODO add your handling code here:
        if (permission_emp == 1)
        {
            
            viewer_product obj = new viewer_product(ob, 1, 1, null, this);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }

    }//GEN-LAST:event_button_browseActionPerformed

    private void button_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_supplierActionPerformed
        // TODO add your handling code here:
        if (permission_emp == 1)
        {
            viewer_supplier obj = new viewer_supplier(ob, 1, this);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }
    }//GEN-LAST:event_button_supplierActionPerformed

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed
        // TODO add your handling code here:
        if (check_prod(textfield_product_id.getText()) == 1){
            add_product();
        }
        
        else{
            new new_product(null, true, textfield_product_id.getText(), textfield_quantity.getText()).show();
            add_product();
        }

    }//GEN-LAST:event_button_addActionPerformed

    private void table_new_supplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_new_supplyMouseClicked
        // TODO add your handling code here:
        int delcon = JOptionPane.showConfirmDialog(null,"DO YOU WANT TO REMOVE SELECTED ITEM FROM THE SUPPLY LIST?");

        if(delcon == JOptionPane.YES_OPTION){
            DefaultTableModel tblmod = (DefaultTableModel) table_new_supply.getModel();
            tblmod.removeRow(table_new_supply.getSelectedRow());

            textfield_product_id.setText("");
            textfield_quantity.setText("");
        }
    }//GEN-LAST:event_table_new_supplyMouseClicked

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
        // TODO add your handling code here:
        if (permission_emp == 1 || permission_supplies == 1)
        {
            dispose();
            
            cat_placed_orders obj = new cat_placed_orders(ob);
            obj.show();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ACCESS");
        }
    }//GEN-LAST:event_button_cancelActionPerformed

    private void button_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_okActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        delivery_date = formatter.format(date_delivery.getDate());
        
        if (textfield_supplier.getText().length()==0 || delivery_date.isEmpty()) 
            JOptionPane.showMessageDialog(null, "PLEASE ENTER SUPPLIER ID/DELIVERY DATE");
        
        else{
            Date date_sel = null;
            try {
                date_sel = new SimpleDateFormat("yyyy-MM-dd").parse(delivery_date);
            } catch (ParseException ex) {
                Logger.getLogger(new_supply.class.getName()).log(Level.SEVERE, null, ex);
            }
            Date date_today = null;
            try {
                date_today = new SimpleDateFormat("yyyy-MM-dd").parse(label_order_date_gen.getText());
            } catch (ParseException ex) {
                Logger.getLogger(new_supply.class.getName()).log(Level.SEVERE, null, ex);
            }
            long diff = date_sel.getTime() - date_today.getTime();

            TimeUnit time = TimeUnit.DAYS; 
            long difference = time.convert(diff, TimeUnit.MILLISECONDS);

            if (difference < 0)
                JOptionPane.showMessageDialog(null, "DELIVERY DATE HAS PASSED");
        
            else{
                int x = 0;
            
                while (row_count > 0)
                {
                    try
                    {
                        product = table_new_supply.getValueAt(x, 1).toString();
                        quantity = table_new_supply.getValueAt(x, 2).toString();

                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                        Statement stm = con.createStatement();
                        ResultSet rs;

                        stm.execute("SET FOREIGN_KEY_CHECKS=0");

                        String query = "INSERT INTO `ordered_supplies`(`supply_no`, `product_id`, `quantity`) VALUES ('" + label_supply_gen.getText() + "', '" + product + "', " + quantity + ")";

                        stm = con.createStatement();
                        stm.executeUpdate(query);                        

                        stm.execute("SET FOREIGN_KEY_CHECKS=1");

                    }

                    catch(SQLException sqlExp){
                        JOptionPane.showMessageDialog(null,sqlExp);
                    }

                    row_count--;
                    x++;
                }

                try{
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                    Statement stm = con.createStatement();

                    stm.execute("SET FOREIGN_KEY_CHECKS=0");

                    String query = "INSERT INTO `supplies_info`(`supply_no`, `supplier_id`, `order_date`, `delivery_date`, `delivery_status`) VALUES ('" + label_supply_gen.getText() + "', '" + textfield_supplier.getText() + "', '" + label_order_date_gen.getText() + "', '" + delivery_date + "', 'NOT DELIVERED')";

                    stm = con.createStatement();
                    stm.executeUpdate(query);

                    stm.execute("SET FOREIGN_KEY_CHECKS=1");
                }
                catch(SQLException sqlExp){
                        JOptionPane.showMessageDialog(null,sqlExp);
                }

                
                JOptionPane.showMessageDialog(null, "SUPPLY ORDER ADDED");

                cat_placed_orders obj = new cat_placed_orders(ob);
                dispose();
                obj.show();
            }
        }
    }//GEN-LAST:event_button_okActionPerformed

    /**
     * @param args the command line arguments
     */
    int check_prod(String prod){
        int x = 0;
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
            PreparedStatement stm;
            ResultSet rs;

            String id_given = prod;

            stm = con.prepareStatement("Select product_id from product_info where product_id = ?");

            stm.setString(1, id_given);
            rs = stm.executeQuery();

            if (rs.next()) {
                con.close();    
                x = 1;                    
            }

            else {
                x = 0;
            }

        }
    catch (SQLException sqlExp) {
        JOptionPane.showMessageDialog(null,"DATABASE CONNECTION FAILED");
    }
        
        return x;
    }
    
    void add_product(){
        if (textfield_product_id.getText().length()==0 || textfield_quantity.getText().length()==0)
            JOptionPane.showMessageDialog(null, "EMPTY FIELDS DETECTED");

        else{
            double unit_price, product_total;
            int n = 1;

            product = textfield_product_id.getText();
            quantity = textfield_quantity.getText();

            try{
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/optical_store_management_system", "root", "");
                Statement stm = con.createStatement();
                ResultSet rs;
                String query;

                query = "SELECT unit_cost_price from product_info WHERE product_id = '" + product + "'";

                rs = stm.executeQuery(query);

                if(rs.next()){
                    unit_price = Double.parseDouble(rs.getString(1));
                    product_total = unit_price * Double.parseDouble(quantity);

                    String[] tbdata = {String.valueOf(n), product, quantity, String.valueOf(unit_price), String.valueOf(product_total)};

                    DefaultTableModel tblmod = (DefaultTableModel) table_new_supply.getModel();
                    tblmod.addRow(tbdata);

                    total_price = total_price + product_total;
                    label_total_gen.setText(String.valueOf(total_price));

                    row_count++;
                    n++;
                }

                else{
                    JOptionPane.showMessageDialog(null, "PRODUCT NOT INCLUDED IN THE DATABASE\n\nRECHECK PRODUCT ID AND TRY AGAIN");
                }

                con.close();
            }
            catch (SQLException exp) {
                JOptionPane.showMessageDialog(null, exp);
            }

        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_add;
    private javax.swing.JButton button_browse;
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_ok;
    private javax.swing.JButton button_supplier;
    private com.toedter.calendar.JDateChooser date_delivery;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_delivery_date;
    private javax.swing.JLabel label_new_supply1;
    private javax.swing.JLabel label_order_date;
    private javax.swing.JLabel label_order_date_gen;
    private javax.swing.JLabel label_product_id;
    private javax.swing.JLabel label_quantity;
    private javax.swing.JLabel label_supplier;
    private javax.swing.JLabel label_supply;
    private javax.swing.JLabel label_supply_gen;
    private javax.swing.JLabel label_title;
    private javax.swing.JLabel label_total;
    private javax.swing.JLabel label_total_gen;
    private javax.swing.JTable table_new_supply;
    private javax.swing.JTextField textfield_product_id;
    private javax.swing.JTextField textfield_quantity;
    private javax.swing.JTextField textfield_supplier;
    // End of variables declaration//GEN-END:variables
}
